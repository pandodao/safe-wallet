// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/pandodao/safe-wallet/handler/api"
	"github.com/pandodao/safe-wallet/handler/rpc"
	wallet2 "github.com/pandodao/safe-wallet/service/wallet"
	"github.com/pandodao/safe-wallet/store/output"
	"github.com/pandodao/safe-wallet/store/transfer"
	"github.com/pandodao/safe-wallet/store/wallet"
	"github.com/spf13/viper"
	"log/slog"
)

// Injectors from wire.go:

func setupApp(v *viper.Viper, logger *slog.Logger) (app, func(), error) {
	db, cleanup, err := provideDB(v)
	if err != nil {
		return app{}, nil, err
	}
	outputStore := output.New(db)
	transferStore := transfer.New(db)
	keystore := provideKeystore(v)
	v2, err := provideEncryptKey(keystore)
	if err != nil {
		cleanup()
		return app{}, nil, err
	}
	walletStore := wallet.New(db, v2)
	client, err := provideMixinClient(keystore)
	if err != nil {
		cleanup()
		return app{}, nil, err
	}
	walletService := wallet2.New(client)
	config := provideRpcConfig(keystore)
	server := rpc.New(outputStore, transferStore, walletStore, walletService, logger, config)
	apiServer := api.New(server)
	httpServer := provideServer(apiServer, server)
	mainApp := app{
		svr:    httpServer,
		logger: logger,
	}
	return mainApp, func() {
		cleanup()
	}, nil
}
